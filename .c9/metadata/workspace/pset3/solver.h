{"filter":false,"title":"solver.h","tooltip":"/pset3/solver.h","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":36,"column":47},"action":"insert","lines":["#include \"framework.h\"","","/* "," *   Find the position of the tile containing number 'tile'"," */","int","find_tile(int tile, int d, int **board);","","/* "," *   Find the Manhattan distance of 'tile'"," */","int","manhattan_distance(int tile, int d, int **board);","","/* "," *   Initialize search"," */","int","iterative_deepening(int **board, int d, int *moves);","","/* "," *   Find the position of the tile containing number 'tile'"," */","bool","search(int **board, int g, int *threshold, int *moves, int *max, int d, int move);","","/* "," *   Update board with given move (0 - up, 1 - left, 2 - right, 3 - down)"," */","void","make_move(int **board, int move, int x, int y);","","/* "," *   Reverse move (0 - up, 1 - left, 2 - right, 3 - down)"," */","void","undo_move(int **board, int move, int x, int y);"],"id":1}]]},"ace":{"folds":[],"scrolltop":147,"scrollleft":0,"selection":{"start":{"row":36,"column":47},"end":{"row":36,"column":47},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":38,"mode":"ace/mode/c_cpp"}},"timestamp":1456630759973,"hash":"246c87055e14a73037eca941ad0ae26506d932f9"}